#!/usr/bin/env python3
"""
Script final para probar el registro de usuarios
"""

try:
    import requests
except ImportError:
    print("‚ùå Error: El m√≥dulo 'requests' no est√° instalado")
    print("üí° Inst√°lalo con: pip install requests")
    exit(1)

import time

def test_registro_final():
    """Probar registro de usuarios"""
    print("üß™ Probando registro de usuarios...")
    
    # Datos de prueba
    datos = {
        'nombre': 'Usuario',
        'apellido': 'Final',
        'email': 'final@test.com',
        'password': 'password123',
        'confirmar_password': 'password123',
        'telefono': '123456789',
        'direccion': 'Direcci√≥n final',
        'terminos': 'aceptado'
    }
    
    try:
        # 1. Verificar que la aplicaci√≥n est√© ejecut√°ndose
        print("1. Verificando aplicaci√≥n...")
        response = requests.get("http://localhost:5000/", timeout=5)
        print(f"   Status: {response.status_code}")
        
        if response.status_code != 200:
            print("‚ùå La aplicaci√≥n no est√° ejecut√°ndose")
            return False
        
        # 2. Obtener p√°gina de registro
        print("\n2. Obteniendo p√°gina de registro...")
        response = requests.get("http://localhost:5000/register", timeout=5)
        print(f"   Status: {response.status_code}")
        
        if response.status_code != 200:
            print("‚ùå Error al obtener p√°gina de registro")
            return False
        
        # 3. Enviar formulario de registro
        print("\n3. Enviando formulario de registro...")
        response = requests.post("http://localhost:5000/register", data=datos, timeout=10)
        print(f"   Status: {response.status_code}")
        print(f"   URL final: {response.url}")
        
        if response.status_code == 302:
            print("‚úÖ Registro exitoso (redirecci√≥n)")
            # Seguir la redirecci√≥n
            redirect_url = response.headers.get('Location')
            if redirect_url:
                print(f"   Redirigiendo a: {redirect_url}")
                response = requests.get(f"http://localhost:5000{redirect_url}", timeout=5)
                print(f"   Status final: {response.status_code}")
            return True
        elif response.status_code == 200:
            print("‚ö†Ô∏è Registro completado pero sin redirecci√≥n")
            # Verificar si hay mensajes de √©xito o error
            content = response.text.lower()
            if "exitoso" in content or "bienvenido" in content:
                print("‚úÖ Registro exitoso")
                return True
            elif "error" in content:
                print("‚ùå Hay errores en la p√°gina")
                return False
            else:
                print("‚úÖ Registro parece exitoso")
                return True
        else:
            print(f"‚ùå Error en registro: {response.status_code}")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚ùå No se puede conectar a la aplicaci√≥n")
        print("üí° Aseg√∫rate de que la aplicaci√≥n est√© ejecut√°ndose en http://localhost:5000")
        return False
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return False

def test_login_final():
    """Probar login de usuarios"""
    print("\nüß™ Probando login de usuarios...")
    
    # Datos de login
    datos = {
        'email': 'final@test.com',
        'password': 'password123'
    }
    
    try:
        # Enviar formulario de login
        response = requests.post("http://localhost:5000/login", data=datos, timeout=10)
        print(f"   Status: {response.status_code}")
        print(f"   URL final: {response.url}")
        
        if response.status_code == 302:
            print("‚úÖ Login exitoso (redirecci√≥n)")
            return True
        elif response.status_code == 200:
            print("‚ö†Ô∏è Login completado pero sin redirecci√≥n")
            content = response.text.lower()
            if "bienvenido" in content or "exitoso" in content:
                print("‚úÖ Login exitoso")
                return True
            else:
                print("‚ùå Login fallido")
                return False
        else:
            print(f"‚ùå Error en login: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return False

def test_recuperar_password_final():
    """Probar recuperaci√≥n de contrase√±a"""
    print("\nüß™ Probando recuperaci√≥n de contrase√±a...")
    
    # Datos de recuperaci√≥n
    datos = {
        'email': 'final@test.com'
    }
    
    try:
        # Enviar formulario de recuperaci√≥n
        response = requests.post("http://localhost:5000/recuperar-password", data=datos, timeout=10)
        print(f"   Status: {response.status_code}")
        print(f"   URL final: {response.url}")
        
        if response.status_code == 200:
            print("‚úÖ Recuperaci√≥n completada")
            return True
        else:
            print(f"‚ùå Error en recuperaci√≥n: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return False

def main():
    """Funci√≥n principal"""
    print("üöÄ Iniciando pruebas finales de autenticaci√≥n...")
    
    # Probar registro
    registro_exitoso = test_registro_final()
    
    if registro_exitoso:
        # Esperar un momento
        time.sleep(2)
        
        # Probar login
        login_exitoso = test_login_final()
        
        if login_exitoso:
            # Esperar un momento
            time.sleep(2)
            
            # Probar recuperaci√≥n de contrase√±a
            recuperacion_exitosa = test_recuperar_password_final()
            
            if recuperacion_exitosa:
                print("\n‚úÖ TODAS LAS PRUEBAS EXITOSAS")
                print("üéâ El registro, login y recuperaci√≥n de contrase√±a funcionan correctamente")
            else:
                print("\n‚ö†Ô∏è Registro y login funcionan, pero hay problemas con recuperaci√≥n")
        else:
            print("\n‚ùå Registro funciona, pero hay problemas con login")
    else:
        print("\n‚ùå Hay problemas con el registro")
    
    print("\n‚úÖ Pruebas completadas")

if __name__ == "__main__":
    main() 