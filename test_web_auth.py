#!/usr/bin/env python3
"""
Script de prueba para testear la autenticaci√≥n web
"""

import requests
import json

# Configuraci√≥n
BASE_URL = "http://localhost:5000"
session = requests.Session()

def test_registro():
    """Probar el registro de usuarios"""
    print("üß™ Probando registro de usuarios...")
    
    # Datos de prueba
    datos_registro = {
        'nombre': 'Usuario',
        'apellido': 'Prueba',
        'email': 'prueba@test.com',
        'password': 'password123',
        'confirmar_password': 'password123',
        'telefono': '123456789',
        'direccion': 'Direcci√≥n de prueba'
    }
    
    try:
        # Hacer POST al endpoint de registro
        response = session.post(f"{BASE_URL}/register", data=datos_registro)
        
        print(f"Status Code: {response.status_code}")
        print(f"URL final: {response.url}")
        print(f"Contenido: {response.text[:500]}...")
        
        if response.status_code == 200:
            print("‚úÖ Registro completado (c√≥digo 200)")
        elif response.status_code == 302:
            print("‚úÖ Registro exitoso (redirecci√≥n)")
        else:
            print(f"‚ùå Error en registro: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå Error al conectar: {e}")

def test_login():
    """Probar el login de usuarios"""
    print("\nüß™ Probando login de usuarios...")
    
    # Datos de login
    datos_login = {
        'email': 'prueba@test.com',
        'password': 'password123'
    }
    
    try:
        # Hacer POST al endpoint de login
        response = session.post(f"{BASE_URL}/login", data=datos_login)
        
        print(f"Status Code: {response.status_code}")
        print(f"URL final: {response.url}")
        print(f"Contenido: {response.text[:500]}...")
        
        if response.status_code == 200:
            print("‚úÖ Login completado (c√≥digo 200)")
        elif response.status_code == 302:
            print("‚úÖ Login exitoso (redirecci√≥n)")
        else:
            print(f"‚ùå Error en login: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå Error al conectar: {e}")

def test_recuperar_password():
    """Probar la recuperaci√≥n de contrase√±a"""
    print("\nüß™ Probando recuperaci√≥n de contrase√±a...")
    
    # Datos de recuperaci√≥n
    datos_recuperacion = {
        'email': 'prueba@test.com'
    }
    
    try:
        # Hacer POST al endpoint de recuperaci√≥n
        response = session.post(f"{BASE_URL}/recuperar-password", data=datos_recuperacion)
        
        print(f"Status Code: {response.status_code}")
        print(f"URL final: {response.url}")
        print(f"Contenido: {response.text[:500]}...")
        
        if response.status_code == 200:
            print("‚úÖ Recuperaci√≥n completada (c√≥digo 200)")
        else:
            print(f"‚ùå Error en recuperaci√≥n: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå Error al conectar: {e}")

def test_pagina_principal():
    """Probar acceso a la p√°gina principal"""
    print("\nüß™ Probando acceso a p√°gina principal...")
    
    try:
        response = session.get(f"{BASE_URL}/")
        
        print(f"Status Code: {response.status_code}")
        print(f"URL final: {response.url}")
        
        if response.status_code == 200:
            print("‚úÖ P√°gina principal accesible")
        else:
            print(f"‚ùå Error en p√°gina principal: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå Error al conectar: {e}")

if __name__ == "__main__":
    print("üöÄ Iniciando pruebas de autenticaci√≥n web...")
    
    # Probar p√°gina principal primero
    test_pagina_principal()
    
    # Probar registro
    test_registro()
    
    # Probar login
    test_login()
    
    # Probar recuperaci√≥n de contrase√±a
    test_recuperar_password()
    
    print("\n‚úÖ Pruebas completadas") 